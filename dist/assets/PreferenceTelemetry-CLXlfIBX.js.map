{"version":3,"file":"PreferenceTelemetry-CLXlfIBX.js","sources":["../../utils/storage/PreferenceTelemetry.ts"],"sourcesContent":["/**\n * Privacy-safe telemetry for preference autosave operations.\n * Tracks only counts and timings; never logs field names or values.\n */\nclass PreferenceTelemetry {\n  private static instance: PreferenceTelemetry;\n\n  private counters: Record<string, number> = {\n    autosave_attempts: 0,\n    autosave_success: 0,\n    autosave_failures: 0,\n    conflicts_409: 0,\n    prevented_writes: 0,\n    offline_saves: 0,\n    rate_limited_skips: 0,\n    pending_sync_flushes: 0,\n  };\n\n  static getInstance(): PreferenceTelemetry {\n    if (!PreferenceTelemetry.instance) {\n      PreferenceTelemetry.instance = new PreferenceTelemetry();\n    }\n    return PreferenceTelemetry.instance;\n  }\n\n  increment(name: keyof PreferenceTelemetry['counters']): void {\n    this.counters[name] = (this.counters[name] || 0) + 1;\n  }\n\n  getReport(): Record<string, number> {\n    return { ...this.counters };\n  }\n}\n\nexport function telemetryIncrement(name: keyof PreferenceTelemetry['counters']): void {\n  PreferenceTelemetry.getInstance().increment(name);\n}\n\nexport function telemetryReport(): Record<string, number> {\n  return PreferenceTelemetry.getInstance().getReport();\n}\n\n\n"],"names":["PreferenceTelemetry","name","telemetryIncrement"],"mappings":"AAIA,MAAMA,CAAoB,CACxB,OAAe,SAEP,SAAmC,CACzC,kBAAmB,EACnB,iBAAkB,EAClB,kBAAmB,EACnB,cAAe,EACf,iBAAkB,EAClB,cAAe,EACf,mBAAoB,EACpB,qBAAsB,CAAA,EAGxB,OAAO,aAAmC,CACxC,OAAKA,EAAoB,WACvBA,EAAoB,SAAW,IAAIA,GAE9BA,EAAoB,QAC7B,CAEA,UAAUC,EAAmD,CAC3D,KAAK,SAASA,CAAI,GAAK,KAAK,SAASA,CAAI,GAAK,GAAK,CACrD,CAEA,WAAoC,CAClC,MAAO,CAAE,GAAG,KAAK,QAAA,CACnB,CACF,CAEO,SAASC,EAAmBD,EAAmD,CACpFD,EAAoB,YAAA,EAAc,UAAUC,CAAI,CAClD"}