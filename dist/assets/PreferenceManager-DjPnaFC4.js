import{D as c}from"./index-tcV2As4L.js";import"./ui-g5Md-TqO.js";import"./vendor-kq2j8kjo.js";import"./supabase-CHvu9mtl.js";class u{static instance;preferenceManager=null;config;isPreloading=!1;preloadPromise=null;lastPreloadTime=0;preloadTimeout=null;constructor(e={}){this.config={preloadCritical:!0,preloadFull:!1,preloadOnAppStart:!0,preloadOnAuth:!0,preloadOnFocus:!1,preloadTimeout:5e3,...e}}static getInstance(e){return u.instance||(u.instance=new u(e)),u.instance}initialize(e){this.preferenceManager=o.getInstance(e)}async preloadCritical(){if(!this.preferenceManager)throw new Error("PreferencePreloader not initialized");const e=performance.now();try{console.log("üöÄ Preloading critical preferences..."),this.preferenceManager.getCriticalPreferences();const t=performance.now()-e;return console.log(`‚úÖ Critical preferences preloaded in ${t.toFixed(2)}ms`),this.lastPreloadTime=Date.now(),{success:!0,criticalLoaded:!0,fullLoaded:!1,duration:t}}catch(t){const i=performance.now()-e;return console.error("‚ùå Failed to preload critical preferences:",t),{success:!1,criticalLoaded:!1,fullLoaded:!1,duration:i,error:t instanceof Error?t.message:"Unknown error"}}}async preloadFull(){if(!this.preferenceManager)throw new Error("PreferencePreloader not initialized");const e=performance.now();try{console.log("üîÑ Preloading full preferences..."),await this.preferenceManager.getPreferences();const t=performance.now()-e;return console.log(`‚úÖ Full preferences preloaded in ${t.toFixed(2)}ms`),this.lastPreloadTime=Date.now(),{success:!0,criticalLoaded:!0,fullLoaded:!0,duration:t}}catch(t){const i=performance.now()-e;return console.error("‚ùå Failed to preload full preferences:",t),{success:!1,criticalLoaded:!1,fullLoaded:!1,duration:i,error:t instanceof Error?t.message:"Unknown error"}}}async preload(){if(this.isPreloading&&this.preloadPromise)return console.log("‚è≥ Preload already in progress, waiting..."),this.preloadPromise;this.isPreloading=!0,this.preloadTimeout=setTimeout(()=>{console.warn("‚ö†Ô∏è Preference preload timeout reached"),this.isPreloading=!1},this.config.preloadTimeout);try{const e=await this.preloadCritical();return e.success&&this.config.preloadFull?await this.preloadFull():e}finally{this.isPreloading=!1,this.preloadTimeout&&(clearTimeout(this.preloadTimeout),this.preloadTimeout=null)}}async preloadOnAppStart(){return this.config.preloadOnAppStart?(console.log("üöÄ Preloading preferences on app start..."),this.preload()):(console.log("‚è≠Ô∏è App start preload disabled"),{success:!0,criticalLoaded:!1,fullLoaded:!1,duration:0})}async preloadOnAuth(){return this.config.preloadOnAuth?(console.log("üîê Preloading preferences on authentication..."),this.preload()):(console.log("‚è≠Ô∏è Auth preload disabled"),{success:!0,criticalLoaded:!1,fullLoaded:!1,duration:0})}async preloadOnFocus(){return this.config.preloadOnFocus?Date.now()-this.lastPreloadTime<300*1e3?(console.log("‚è≠Ô∏è Skipping focus preload (too recent)"),{success:!0,criticalLoaded:!0,fullLoaded:!0,duration:0}):(console.log("üì± Preloading preferences on app focus..."),this.preload()):(console.log("‚è≠Ô∏è Focus preload disabled"),{success:!0,criticalLoaded:!1,fullLoaded:!1,duration:0})}getStatus(){return{isPreloading:this.isPreloading,lastPreloadTime:this.lastPreloadTime,timeSinceLastPreload:Date.now()-this.lastPreloadTime,config:this.config}}updateConfig(e){this.config={...this.config,...e},console.log("‚öôÔ∏è Updated preload configuration:",this.config)}reset(){this.isPreloading=!1,this.preloadPromise=null,this.lastPreloadTime=0,this.preloadTimeout&&(clearTimeout(this.preloadTimeout),this.preloadTimeout=null),console.log("üîÑ Preference preloader reset")}}class p{cache=new Map;strategy;stats={hits:0,misses:0,evictions:0,totalAccesses:0};constructor(e){this.strategy={critical:{ttl:1440*60*1e3,priority:"high",preload:!0,maxSize:1024*1024},nonCritical:{ttl:3600*1e3,priority:"medium",preload:!1,maxSize:512*1024},validation:{ttl:1800*1e3,priority:"low",preload:!1,maxSize:256*1024},...e}}get(e,t="nonCritical"){this.stats.totalAccesses++,performance.now();const i=this.cache.get(e);if(!i)return this.stats.misses++,null;const r=Date.now();return r-i.timestamp>i.ttl?(this.cache.delete(e),this.stats.misses++,null):(i.accessCount++,i.lastAccess=r,this.stats.hits++,i.data)}set(e,t,i="nonCritical",r){const s=this.strategy[i],a=this.calculateSize(t);this.ensureCapacity(i,a);const n={data:t,timestamp:Date.now(),ttl:r||s.ttl,priority:s.priority,accessCount:0,lastAccess:Date.now(),size:a};this.cache.set(e,n)}getCriticalPreferences(){return this.get("critical_preferences","critical")}setCriticalPreferences(e){this.set("critical_preferences",e,"critical")}getFullPreferences(){return this.get("full_preferences","nonCritical")}setFullPreferences(e){this.set("full_preferences",e,"nonCritical")}getValidationResult(e){return this.get(`validation_${e}`,"validation")}setValidationResult(e,t){this.set(`validation_${e}`,t,"validation")}has(e){const t=this.cache.get(e);return t?Date.now()-t.timestamp<=t.ttl:!1}delete(e){return this.cache.delete(e)}clear(){this.cache.clear(),this.resetStats()}clearExpired(){const e=Date.now();let t=0;for(const[i,r]of this.cache.entries())e-r.timestamp>r.ttl&&(this.cache.delete(i),t++);return t}getStats(){const e=this.cache.size;let t=0,i=0;for(const n of this.cache.values())t+=n.size,i+=n.accessCount;const r=this.stats.totalAccesses>0?this.stats.hits/this.stats.totalAccesses:0,s=this.stats.totalAccesses>0?this.stats.misses/this.stats.totalAccesses:0,a=e>0?i/e:0;return{totalEntries:e,totalSize:t,hitRate:r,missRate:s,evictions:this.stats.evictions,averageAccessTime:a,memoryUsage:this.getMemoryUsage()}}updateStrategy(e){this.strategy={...this.strategy,...e}}getEntriesByType(e){const t=[];for(const[i,r]of this.cache.entries())r.priority===this.strategy[e].priority&&t.push({key:i,entry:r});return t}ensureCapacity(e,t){this.strategy[e];const i=this.getEntriesByType(e);let r=0;for(const{entry:s}of i)r+=s.size;r+t>this.strategy[e].maxSize&&this.evictEntries(e,t)}evictEntries(e,t){this.strategy[e];const i=this.getEntriesByType(e);i.sort((a,n)=>a.entry.lastAccess-n.entry.lastAccess);let r=0;const s=[];for(const{key:a,entry:n}of i){if(r>=t)break;s.push(a),r+=n.size}for(const a of s)this.cache.delete(a),this.stats.evictions++}calculateSize(e){try{return new Blob([JSON.stringify(e)]).size}catch{return 1024}}getMemoryUsage(){let e=0;for(const t of this.cache.values())e+=t.size;return e}resetStats(){this.stats={hits:0,misses:0,evictions:0,totalAccesses:0}}}class y{static baseURL="/api/preferences";static async validate(e){try{const t=await fetch(`${this.baseURL}/validate`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error(`Validation failed: ${t.statusText}`);return await t.json()}catch(t){return console.error("Server validation failed, falling back to client validation:",t),this.clientSideValidation(e.preferences,e.validationLevel)}}static async validateCritical(e){return this.validate({preferences:e,validationLevel:"critical"})}static async validateStrict(e){return this.validate({preferences:e,validationLevel:"strict"})}static clientSideValidation(e,t){const i=[],r=[],s=[],a=[],n=this.getValidationRules(t);for(const l of n){const h=e[l.field],d=l.validator(h);d.isValid?d.warning&&r.push(d.warning):l.critical?(i.push(d.error||`Invalid ${l.field}`),s.push(l.field)):r.push(d.error||`Invalid ${l.field}`)}if(t==="strict"||t==="relaxed"){const l=this.validateLogic(e);i.push(...l.errors),r.push(...l.warnings),a.push(...l.suggestions)}return{isValid:i.length===0,errors:i,warnings:r,criticalFields:s,suggestions:a,validationLevel:t,timestamp:new Date().toISOString()}}static getValidationRules(e){const t=[{field:"calendar_work_start",required:!0,critical:!0,validator:i=>i?this.isValidTimeFormat(i)?{isValid:!0}:{isValid:!1,error:"Invalid time format (use HH:MM or HH:MM:SS)"}:{isValid:!1,error:"Work start time is required"}},{field:"calendar_work_end",required:!0,critical:!0,validator:i=>i?this.isValidTimeFormat(i)?{isValid:!0}:{isValid:!1,error:"Invalid time format (use HH:MM or HH:MM:SS)"}:{isValid:!1,error:"Work end time is required"}},{field:"calendar_working_days",required:!0,critical:!0,validator:i=>!Array.isArray(i)||i.length===0?{isValid:!1,error:"Working days must be a non-empty array"}:{isValid:!0}},{field:"calendar_min_gap",required:!1,critical:!1,validator:i=>i!==void 0&&(typeof i!="number"||i<5)?{isValid:!1,error:"Minimum gap must be at least 5 minutes"}:{isValid:!0}}];return e==="strict"&&t.push({field:"preferred_categories",required:!1,critical:!1,validator:i=>i&&(!Array.isArray(i)||i.length===0)?{isValid:!1,error:"Preferred categories must be a non-empty array"}:{isValid:!0}}),t}static validateLogic(e){const t=[],i=[],r=[];if(e.calendar_work_start&&e.calendar_work_end){const s=this.timeToMinutes(e.calendar_work_start),a=this.timeToMinutes(e.calendar_work_end);s>=a&&t.push("Work start time must be before work end time"),a-s<60&&(i.push("Work hours are less than 1 hour"),r.push("Consider extending your work hours for better productivity")),a-s>720&&(i.push("Work hours are more than 12 hours"),r.push("Consider shorter work hours for better work-life balance"))}return e.calendar_working_days&&e.calendar_working_days.length===0&&t.push("At least one working day must be selected"),{errors:t,warnings:i,suggestions:r}}static isValidTimeFormat(e){return/^([0-1]?[0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?$/.test(e)}static timeToMinutes(e){const[t,i]=e.split(":").map(Number);return t*60+(i||0)}}class f{static instance;impactConfig;constructor(){this.impactConfig={critical:{fields:["calendar_work_start","calendar_work_end","calendar_working_days"],impact:"high",requiresGapRecalculation:!0,requiresImmediateUpdate:!0},medium:{fields:["calendar_min_gap","calendar_buffer_time"],impact:"medium",requiresGapRecalculation:!0,requiresImmediateUpdate:!1},low:{fields:["dark_mode","sound_enabled","vibration_enabled","default_energy_level","preferred_categories","autostart","show_timer"],impact:"low",requiresGapRecalculation:!1,requiresImmediateUpdate:!1}}}static getInstance(){return f.instance||(f.instance=new f),f.instance}detectChanges(e,t){const i=[];let r=!1,s=!1;for(const l of Object.keys(t)){const h=e[l],d=t[l];if(!this.isEqual(h,d)){const g=this.createChangeEvent(l,h,d);i.push(g),g.requiresGapRecalculation&&(r=!0),g.requiresImmediateUpdate&&(s=!0)}}const a=this.calculateAffectedDateRange(i),n=this.generateSummary(i);return{hasChanges:i.length>0,changes:i,requiresGapRecalculation:r,requiresImmediateUpdate:s,summary:n,affectedDateRange:a}}createChangeEvent(e,t,i){const r=this.getFieldImpact(e),s=this.impactConfig[r];return{field:e,oldValue:t,newValue:i,impact:s.impact,requiresGapRecalculation:s.requiresGapRecalculation,requiresImmediateUpdate:s.requiresImmediateUpdate,affectedDates:this.getAffectedDates(e,t,i),description:this.generateChangeDescription(e,t,i)}}getFieldImpact(e){return this.impactConfig.critical.fields.includes(e)?"critical":this.impactConfig.medium.fields.includes(e)?"medium":"low"}calculateAffectedDateRange(e){if(e.filter(a=>a.requiresGapRecalculation&&a.impact==="high").length===0)return null;const i=new Date,r=i.toLocaleDateString("en-CA"),s=new Date(i.getTime()+336*60*60*1e3).toLocaleDateString("en-CA");return{start:r,end:s}}getAffectedDates(e,t,i){const r=[],s=new Date;if(e==="calendar_working_days")for(let a=0;a<14;a++){const n=new Date(s.getTime()+a*24*60*60*1e3);r.push(n.toLocaleDateString("en-CA"))}else if(e==="calendar_work_start"||e==="calendar_work_end")for(let a=0;a<14;a++){const n=new Date(s.getTime()+a*24*60*60*1e3);r.push(n.toLocaleDateString("en-CA"))}else{r.push(s.toLocaleDateString("en-CA"));const a=new Date(s.getTime()+1440*60*1e3);r.push(a.toLocaleDateString("en-CA"))}return r}generateChangeDescription(e,t,i){switch(e){case"calendar_work_start":return`Work start time changed from ${t} to ${i}`;case"calendar_work_end":return`Work end time changed from ${t} to ${i}`;case"calendar_working_days":{const r=Array.isArray(t)?t:Object.values(t||{}),s=Array.isArray(i)?i:Object.values(i||{});return`Working days changed from ${r.join(", ")} to ${s.join(", ")}`}case"calendar_min_gap":return`Minimum gap changed from ${t} to ${i} minutes`;case"dark_mode":return`Dark mode changed from ${t} to ${i}`;default:return`${e} changed from ${t} to ${i}`}}generateSummary(e){if(e.length===0)return"No changes detected";const t=e.filter(a=>a.impact==="high"),i=e.filter(a=>a.impact==="medium"),r=e.filter(a=>a.impact==="low"),s=[];return t.length>0&&s.push(`${t.length} critical change${t.length>1?"s":""}`),i.length>0&&s.push(`${i.length} medium change${i.length>1?"s":""}`),r.length>0&&s.push(`${r.length} minor change${r.length>1?"s":""}`),s.join(", ")}isEqual(e,t){if(e===t)return!0;if(e==null||t==null||typeof e!=typeof t)return!1;if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return!1;for(let i=0;i<e.length;i++)if(!this.isEqual(e[i],t[i]))return!1;return!0}if(typeof e=="object"){const i=Object.keys(e),r=Object.keys(t);if(i.length!==r.length)return!1;for(const s of i)if(!r.includes(s)||!this.isEqual(e[s],t[s]))return!1;return!0}return!1}updateImpactConfig(e){this.impactConfig={...this.impactConfig,...e}}getImpactConfig(){return{...this.impactConfig}}requiresGapRecalculation(e){const t=this.getFieldImpact(e);return this.impactConfig[t].requiresGapRecalculation}requiresImmediateUpdate(e){const t=this.getFieldImpact(e);return this.impactConfig[t].requiresImmediateUpdate}}class o{static instance;preferences=null;isLoading=!1;lastLoadTime=0;config;storage;preloader;intelligentCache;changeDetector;constructor(e,t={}){this.storage=e,this.config={memoryTTL:1440*60*1e3,validationEnabled:!0,criticalFields:["calendar_work_start","calendar_work_end","calendar_working_days","calendar_min_gap"],defaultFallback:!0,enablePreloading:!0,enableIntelligentCache:!0,enableChangeDetection:!0,enableServerValidation:!0,...t},this.config.enableIntelligentCache&&(this.intelligentCache=new p),this.config.enableChangeDetection&&(this.changeDetector=f.getInstance())}static getInstance(e,t){return o.instance?(e&&o.instance.storage!==e&&(o.instance.storage=e,o.instance.preloader&&o.instance.preloader.initialize(e)),t&&Object.keys(t).length>0&&(o.instance.config={...o.instance.config,...t}),o.instance):(o.instance=new o(e,t),o.instance.config.enablePreloading&&(o.instance.preloader=u.getInstance(),o.instance.preloader.initialize(e)),o.instance)}async getPreferences(){const e=Date.now();if(this.intelligentCache){const t=this.intelligentCache.getFullPreferences();if(t)return console.log("‚ö° Preferences retrieved from intelligent cache"),t}if(this.preferences&&e-this.lastLoadTime<this.config.memoryTTL)return console.log("‚ö° Preferences retrieved from memory cache"),this.preferences;if(this.isLoading){for(console.log("‚è≥ Preferences already loading, waiting...");this.isLoading;)await new Promise(t=>setTimeout(t,10));return this.preferences||c}this.isLoading=!0;try{console.log("üîÑ Loading preferences...");let t=await this.loadFromStorage();if(t||(t=await this.loadFromServer()),!t&&this.config.defaultFallback&&(t=c,console.log("‚ö†Ô∏è Using default preferences")),t){if(this.config.enableServerValidation)try{const i=await y.validateStrict(t);i.isValid||(console.warn("‚ö†Ô∏è Server validation failed:",i.errors),this.config.defaultFallback&&(t=this.mergeWithDefaults(t)))}catch(i){console.warn("‚ö†Ô∏è Server validation failed, using client validation:",i);const r=this.validatePreferences(t);r.isValid||(console.warn("‚ö†Ô∏è Client validation failed:",r.errors),this.config.defaultFallback&&(t=this.mergeWithDefaults(t)))}else{const i=this.validatePreferences(t);i.isValid||(console.warn("‚ö†Ô∏è Preference validation failed:",i.errors),this.config.defaultFallback&&(t=this.mergeWithDefaults(t)))}return this.preferences=t,this.lastLoadTime=e,this.intelligentCache&&this.intelligentCache.setFullPreferences(t),await this.saveToStorage(t),console.log("‚úÖ Preferences loaded successfully"),t}throw new Error("Failed to load preferences from all sources")}catch(t){if(console.error("‚ùå Error loading preferences:",t),this.config.defaultFallback)return c;throw t}finally{this.isLoading=!1}}async savePreferences(e){if(console.log("üíæ Saving preferences..."),this.changeDetector&&this.preferences){const t=a=>Array.isArray(a)?a:a&&typeof a=="object"?Object.values(a):a,i={...this.preferences,calendar_working_days:t(this.preferences.calendar_working_days)},r={...e,calendar_working_days:t(e.calendar_working_days)},s=this.changeDetector.detectChanges(i,r);s.hasChanges&&(console.log("üîÑ Preference changes detected:",s.summary),s.requiresGapRecalculation&&(console.log("‚ö†Ô∏è Gap recalculation required for affected dates:",s.affectedDateRange),this.emitPreferenceChangeEvent(s)))}this.intelligentCache&&this.intelligentCache.setFullPreferences(e),this.preferences=e,this.lastLoadTime=Date.now(),await this.saveToStorage(e),this.syncToServer(e).catch(t=>{console.warn("‚ö†Ô∏è Background server sync failed:",t)}),console.log("‚úÖ Preferences saved successfully")}getCriticalPreferences(){if(this.intelligentCache){const t=this.intelligentCache.getCriticalPreferences();if(t)return t}if(!this.preferences){const t={calendar_work_start:c.calendar_work_start,calendar_work_end:c.calendar_work_end,calendar_working_days:c.calendar_working_days,calendar_min_gap:c.calendar_min_gap};return this.intelligentCache&&this.intelligentCache.setCriticalPreferences(t),t}const e=this.config.criticalFields.reduce((t,i)=>{const r=this.preferences[i];return r!==void 0&&(t[i]=r),t},{});return this.intelligentCache&&this.intelligentCache.setCriticalPreferences(e),e}isLoaded(){return this.preferences!==null&&Date.now()-this.lastLoadTime<this.config.memoryTTL}async refresh(){return console.log("üîÑ Force refreshing preferences..."),this.preferences=null,this.lastLoadTime=0,this.getPreferences()}clearCache(){this.preferences=null,this.lastLoadTime=0,this.intelligentCache&&this.intelligentCache.clear(),console.log("üóëÔ∏è Preference cache cleared")}async preloadCritical(){this.preloader&&await this.preloader.preloadCritical()}async preloadFull(){this.preloader&&await this.preloader.preloadFull()}getCacheStats(){return this.intelligentCache?this.intelligentCache.getStats():null}getPreloadStatus(){return this.preloader?this.preloader.getStatus():null}emitPreferenceChangeEvent(e){console.log("üì° Preference change event emitted:",{requiresGapRecalculation:e.requiresGapRecalculation,affectedDateRange:e.affectedDateRange,changes:e.changes}),typeof window<"u"&&window.dispatchEvent(new CustomEvent("preferenceChange",{detail:e}))}validatePreferences(e){const t=[],i=[],r=[];for(const a of this.config.criticalFields){const n=e[a];(n==null||n==="")&&(t.push(`Missing critical field: ${a}`),r.push(a))}if(e.calendar_work_start&&e.calendar_work_end){const a=this.timeToMinutes(e.calendar_work_start),n=this.timeToMinutes(e.calendar_work_end);a>=n&&t.push("Work start time must be before work end time"),n-a<60&&i.push("Work hours are less than 1 hour")}e.calendar_working_days&&(!Array.isArray(e.calendar_working_days)||e.calendar_working_days.length===0)&&t.push("Working days must be a non-empty array");const s=["calendar_work_start","calendar_work_end"];for(const a of s){const n=e[a];n&&typeof n=="string"&&!this.isValidTimeFormat(n)&&i.push(`Invalid time format for ${a}: ${n}`)}return{isValid:t.length===0,errors:t,warnings:i,criticalFields:r}}mergeWithDefaults(e){return{...c,...e,calendar_work_start:e.calendar_work_start||c.calendar_work_start,calendar_work_end:e.calendar_work_end||c.calendar_work_end,calendar_working_days:e.calendar_working_days||c.calendar_working_days,calendar_min_gap:e.calendar_min_gap||c.calendar_min_gap}}async loadFromStorage(){try{return await this.storage.getPreferences()}catch(e){return console.warn("‚ö†Ô∏è Failed to load preferences from storage:",e),null}}async loadFromServer(){try{return null}catch(e){return console.warn("‚ö†Ô∏è Failed to load preferences from server:",e),null}}async saveToStorage(e){try{await this.storage.savePreferences(e)}catch(t){throw console.error("‚ùå Failed to save preferences to storage:",t),t}}async syncToServer(e){}timeToMinutes(e){const[t,i]=e.split(":").map(Number);return t*60+(i||0)}isValidTimeFormat(e){return/^([0-1]?[0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?$/.test(e)}}export{o as PreferenceManager};
//# sourceMappingURL=PreferenceManager-DjPnaFC4.js.map
